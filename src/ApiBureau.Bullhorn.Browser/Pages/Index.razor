@page "/"
@using CodeCapital.System.Text.Json;
@using System.Text;

<PageTitle>Bullhorn API Browser</PageTitle>

<div class="row">
    <div class="col-md-12 col-lg-12">
        <div class="mb-3">
            <label for="exampleFormControlTextarea1" class="form-label"></label>
            <InputRadioGroup Value="_selectedType" Name="filter" TValue="string" ValueExpression="() => _selectedType" ValueChanged="(e) => SetType(e)">
                @foreach (var item in _types)
                {
                    <div class="form-check form-check-inline">
                        <InputRadio Name="filter" Value="@item" id="@($"radio-{item}")" class="form-check-input action" />
                        <label class="form-check-label action" for="@($"radio-{item}")">@item</label>
                    </div>
                }
            </InputRadioGroup>
            <InputTextArea @bind-Value="_query" rows="5" class="form-control mt-3" id="exampleFormControlTextarea1" />
            <div class="mt-3">
                <button class="btn btn-primary btn-sm" @onclick="SubmitAsync">
                    @if (_isLoading)
                    {
                        <i class="fa-solid fa-spinner fa-spin-pulse me-2"></i>
                    }
                    Submit
                </button>
                @*<button class="btn btn-secondary" @onclick="GetData">Get Data</button>*@
            </div>
        </div>
    </div>
    <div class="col-12 mb-3">
        <button class="btn btn-success btn-sm" @onclick="@(() => _displayType = "table")">Show as Table</button>
        <button class="btn btn-success btn-sm" @onclick="@(() => _displayType = "json")">Show as JSON</button>
    </div>
    <div class="col-12">
        @if (_displayType == "table")
        {
            <table class="table table-sm">
                <thead>
                    <tr>
                        @foreach (var item in _columnNames)
                        {
                            <th>@item</th>
                        }
                    </tr>
                </thead>
                <tbody>
                    @foreach (var row in _data)
                    {
                        <tr>
                            @foreach (var header in _columnNames)
                            {
                                <td>@JsonTableHelper.GetValueAsString(row, header)</td>
                            }
                        </tr>
                    }
                </tbody>
            </table>
        }
        else if (_displayType == "json")
        {
            <pre style="white-space: pre-wrap;">@_jsonResult</pre>
        }
    </div>
    <div class="col-md-12 col-lg-12" style="overflow-wrap: anywhere">
        <h5>Response</h5><button class="btn btn-warning btn-sm">Clear</button>
        @_response
    </div>
</div>

<SurveyPrompt Title="How is Blazor working for you?" />

@code {
    [Inject] protected DataService DataService { get; set; } = default!;

    private bool _isLoading = false;
    private string _query = "CorporationDepartment?fields=id,dateAdded,name,enabled&where=id>0&orderBy=enabled,dateAdded";
    private string _selectedType = "query";
    private MarkupString _response = new();
    private string _jsonResult = "";
    private string _resultDynanmic = "";
    private List<string> _types = new List<string> { "query", "search", "entity", "any" };
    private List<IDictionary<string, object>> _data = new();
    private HashSet<string> _columnNames = new();
    private JsonFlattener _flattener = new();
    private JsonSerializerFlattenOptions _options = new() { StartToken = "data" };
    private string _displayType = "table";

    private void SetType(string value)
    {
        _selectedType = value;
    }

    private async Task SubmitAsync()
    {
        _isLoading = true;

        WriteLog(_query);

        try
        {
            var response = await DataService.GetAsync($"{_selectedType}/{_query}", 100, 0);

            WriteLog($"Response status code: {response.StatusCode}");
            WriteLog($"Uri: {response.RequestMessage.RequestUri}");

            SetJsonResult(await response.Content.ReadAsStringAsync());

            var stream = await response.Content.ReadAsStreamAsync();

            _data = await _flattener.FlattenAsync(stream, _options);

            _columnNames = JsonTableHelper.ExtractColumnNames(_data);
        }
        catch (Exception err)
        {
            WriteError(err.Message);
        }

        _isLoading = false;
    }

    private void SetJsonResult(string json)
    {
        _jsonResult = json;

        if (_jsonResult.Contains("errorMessage"))
        {
            WriteError(json);
        }
    }

    private void WriteLog(string message)
    {
        _response = new MarkupString($"<p><small class=\"text-secondary\">{DateTime.Now}</small>: {message}</p>" + _response);
    }

    private void WriteError(string message)
    {
        WriteLog($"<span class=\"text-danger\">{message}</span>");
    }

    private async Task GetData()
    {
        //_data = await Task.Run(() => flattener.Flatten(GetJsonSample(), options));

        var response = await DataService.GetAsync($"{_selectedType}/{_query}", 100, 0);

        var json = await response.Content.ReadAsStringAsync();

        _data = await _flattener.FlattenAsync(new MemoryStream(Encoding.UTF8.GetBytes(json)), _options);
        //_data = await flattener.FlattenAsync(new MemoryStream(Encoding.UTF8.GetBytes(GetJsonSample())), options);

        _columnNames = JsonTableHelper.ExtractColumnNames(_data);
    }

    private string GetJsonSample()
    {
        return
                                 """"
[{"id":12647,"dateAdded":1322826368183,"name":"FS Tech","enabled":true},{"id":12648,"dateAdded":1322826368213,"name":"FS Finance","enabled":true},{"id":12649,"dateAdded":1322826368213,"name":"C & I Tech","enabled":true},{"id":12650,"dateAdded":1322826368230,"name":"C & I Finance","enabled":true},{"id":12651,"dateAdded":1322826368230,"name":"Prof Serv","enabled":true},{"id":12652,"dateAdded":1322826368260,"name":"Lothbury","enabled":true},{"id":12653,"dateAdded":1322826368277,"name":"US FS","enabled":true},{"id":12654,"dateAdded":1322826368290,"name":"US C & I","enabled":true},{"id":12655,"dateAdded":1322826368307,"name":"Mission Control","enabled":true},{"id":13504,"dateAdded":1332243903857,"name":"Twenty Recruitment","enabled":true},{"id":13566,"dateAdded":1333361273607,"name":"IT","enabled":true},{"id":15424,"dateAdded":1349771399330,"name":"Twenty Smoke Test","enabled":true},{"id":17252,"dateAdded":1364234627347,"name":"FS Operations","enabled":true},{"id":19663,"dateAdded":1386841255297,"name":"Energy","enabled":true},{"id":19664,"dateAdded":1386841255330,"name":"Health","enabled":true},{"id":19665,"dateAdded":1386841255343,"name":"Digital","enabled":true},{"id":21565,"dateAdded":1400507193687,"name":"FS Compliance","enabled":true, "age": 23}]
"""";
    }


    private string GetJsonSample2()
    {
        return
                                 """"
{"total":17,"start":0,"count":17,"data":[{"id":12647,"dateAdded":1322826368183,"name":"FS Tech","enabled":true},{"id":12648,"dateAdded":1322826368213,"name":"FS Finance","enabled":true},{"id":12649,"dateAdded":1322826368213,"name":"C & I Tech","enabled":true},{"id":12650,"dateAdded":1322826368230,"name":"C & I Finance","enabled":true},{"id":12651,"dateAdded":1322826368230,"name":"Prof Serv","enabled":true},{"id":12652,"dateAdded":1322826368260,"name":"Lothbury","enabled":true},{"id":12653,"dateAdded":1322826368277,"name":"US FS","enabled":true},{"id":12654,"dateAdded":1322826368290,"name":"US C & I","enabled":true},{"id":12655,"dateAdded":1322826368307,"name":"Mission Control","enabled":true},{"id":13504,"dateAdded":1332243903857,"name":"Twenty Recruitment","enabled":true},{"id":13566,"dateAdded":1333361273607,"name":"IT","enabled":true},{"id":15424,"dateAdded":1349771399330,"name":"Twenty Smoke Test","enabled":true},{"id":17252,"dateAdded":1364234627347,"name":"FS Operations","enabled":true},{"id":19663,"dateAdded":1386841255297,"name":"Energy","enabled":true},{"id":19664,"dateAdded":1386841255330,"name":"Health","enabled":true},{"id":19665,"dateAdded":1386841255343,"name":"Digital","enabled":true},{"id":21565,"dateAdded":1400507193687,"name":"FS Compliance","enabled":true}]}
"""";
    }
}